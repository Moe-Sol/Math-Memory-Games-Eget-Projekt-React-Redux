[{"C:\\Users\\Dell\\Desktop\\programering\\projeckt\\React\\med läraren\\Från Christoffer\\Redux\\memorygame-min\\src\\index.js":"1","C:\\Users\\Dell\\Desktop\\programering\\projeckt\\React\\med läraren\\Från Christoffer\\Redux\\memorygame-min\\src\\App.js":"2","C:\\Users\\Dell\\Desktop\\programering\\projeckt\\React\\med läraren\\Från Christoffer\\Redux\\memorygame-min\\src\\reportWebVitals.js":"3","C:\\Users\\Dell\\Desktop\\programering\\projeckt\\React\\med läraren\\Från Christoffer\\Redux\\memorygame-min\\src\\actions\\action.js":"4","C:\\Users\\Dell\\Desktop\\programering\\projeckt\\React\\med läraren\\Från Christoffer\\Redux\\memorygame-min\\src\\reducer\\allreducerar.js":"5","C:\\Users\\Dell\\Desktop\\programering\\projeckt\\React\\med läraren\\Från Christoffer\\Redux\\memorygame-min\\src\\reducer\\secondReducer.js":"6","C:\\Users\\Dell\\Desktop\\programering\\projeckt\\React\\med läraren\\Från Christoffer\\Redux\\memorygame-min\\src\\reducer\\firstReducer.js":"7","C:\\Users\\Dell\\Desktop\\programering\\projeckt\\React\\med läraren\\Från Christoffer\\Redux\\memorygame-min\\src\\components\\GameFinished.js":"8","C:\\Users\\Dell\\Desktop\\programering\\projeckt\\React\\med läraren\\Från Christoffer\\Redux\\memorygame-min\\src\\reducer\\cardsFactory.js":"9","C:\\Users\\Dell\\Desktop\\programering\\projeckt\\React\\med läraren\\Från Christoffer\\Redux\\memorygame-min\\src\\components\\FormulasCards.js":"10","C:\\Users\\Dell\\Desktop\\programering\\projeckt\\React\\med läraren\\Från Christoffer\\Redux\\memorygame-min\\src\\components\\ResultsCards.js":"11"},{"size":665,"mtime":1613119400875,"results":"12","hashOfConfig":"13"},{"size":3224,"mtime":1615056004142,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1611734131000,"results":"15","hashOfConfig":"13"},{"size":570,"mtime":1613294345552,"results":"16","hashOfConfig":"13"},{"size":248,"mtime":1612383406727,"results":"17","hashOfConfig":"13"},{"size":563,"mtime":1612385320299,"results":"18","hashOfConfig":"13"},{"size":1614,"mtime":1613851291124,"results":"19","hashOfConfig":"13"},{"size":179,"mtime":1612385179632,"results":"20","hashOfConfig":"13"},{"size":6152,"mtime":1615049227154,"results":"21","hashOfConfig":"13"},{"size":1776,"mtime":1615055803208,"results":"22","hashOfConfig":"13"},{"size":1774,"mtime":1615205429906,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1711hv2",{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Dell\\Desktop\\programering\\projeckt\\React\\med läraren\\Från Christoffer\\Redux\\memorygame-min\\src\\index.js",[],["51","52"],"C:\\Users\\Dell\\Desktop\\programering\\projeckt\\React\\med läraren\\Från Christoffer\\Redux\\memorygame-min\\src\\App.js",["53","54","55","56"],"import './App.css';\nimport FormulasCards from './components/FormulasCards';\nimport ResultsCards from './components/ResultsCards';\nimport GameFinished from './components/GameFinished';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux'\n\nimport React, { useEffect, useState } from 'react';\nimport { sameCards, gameFinished, differentCards } from './actions/action';\n\nfunction App() {\n  const dispatch = useDispatch()\n\n  const [formulaOrResult, setFormulaOrResult] = useState('')\n\n  const stateFirstReducer = useSelector(state => {\n    // console.log(state)\n    return state.firstReducer\n  })\n\n  useEffect(() => {\n    let firstClassFrontNum = (stateFirstReducer.choosedCardsId[0] * 2)\n    let firstClassBacktNum = ((stateFirstReducer.choosedCardsId[0] * 2) + 1)\n    let secondClassFronttNum = (stateFirstReducer.choosedCardsId[1] * 2)\n    let secondClassBacktNum = ((stateFirstReducer.choosedCardsId[1] * 2) + 1)\n    let allSpan = document.querySelectorAll('span')\n    console.log(allSpan)\n    if (stateFirstReducer.choosedCardsValue[0] !== stateFirstReducer.choosedCardsValue[1] && stateFirstReducer.choosedCardsValue[1] !== undefined) {\n      setTimeout(() => {\n        allSpan[firstClassFrontNum].className = 'front flip';\n        allSpan[firstClassBacktNum].className = 'back';\n        allSpan[secondClassFronttNum].className = 'front flip';\n        allSpan[secondClassBacktNum].className = 'back';\n        dispatch(differentCards())\n        setFormulaOrResult('')\n\n      }, 1000);\n    }\n    else if (stateFirstReducer.choosedCardsValue[0] == stateFirstReducer.choosedCardsValue[1] && stateFirstReducer.choosedCardsValue[1] !== undefined) {\n      let firstCardId = allSpan[firstClassFrontNum].parentElement;\n      let secondCardId = allSpan[secondClassFronttNum].parentElement;\n\n      firstCardId.style.pointerEvents = 'none'\n      secondCardId.style.pointerEvents = 'none'\n\n      setFormulaOrResult('')\n      dispatch(sameCards(firstCardId.id, secondCardId.id))\n\n    }\n  })\n\n\n  useEffect(() => {\n    if (stateFirstReducer.allSameCards.length === stateFirstReducer.allCards.length) {\n      dispatch(gameFinished(true))\n    }\n  })\n  return (\n    <div className='allCardsContainer'>\n      <section className=\"memory-cards\">\n        {stateFirstReducer.gameFinished ? <GameFinished /> :\n          stateFirstReducer.allCards.map((card, index) => {\n            if (index < 10) {\n              return (\n                <FormulasCards theCard={card} key={index} id={index} className='class-Formulas' cartText='Formula' setFormulaOrResult={setFormulaOrResult} formulaOrResult={formulaOrResult} />\n              )\n            }\n          })\n        }\n      </section>\n      <section className=\"memory-cards\">\n        {stateFirstReducer.gameFinished ? <GameFinished /> :\n          stateFirstReducer.allCards.map((card, index) => {\n            if (index > 9) {\n              return (\n                <ResultsCards theCard={card} key={index} id={index} className='class-Results' cartText='Result'\n                  setFormulaOrResult={setFormulaOrResult} formulaOrResult={formulaOrResult} />\n              )\n            }\n          })\n        }\n      </section>\n\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Dell\\Desktop\\programering\\projeckt\\React\\med läraren\\Från Christoffer\\Redux\\memorygame-min\\src\\reportWebVitals.js",[],"C:\\Users\\Dell\\Desktop\\programering\\projeckt\\React\\med läraren\\Från Christoffer\\Redux\\memorygame-min\\src\\actions\\action.js",[],"C:\\Users\\Dell\\Desktop\\programering\\projeckt\\React\\med läraren\\Från Christoffer\\Redux\\memorygame-min\\src\\reducer\\allreducerar.js",[],"C:\\Users\\Dell\\Desktop\\programering\\projeckt\\React\\med läraren\\Från Christoffer\\Redux\\memorygame-min\\src\\reducer\\secondReducer.js",[],"C:\\Users\\Dell\\Desktop\\programering\\projeckt\\React\\med läraren\\Från Christoffer\\Redux\\memorygame-min\\src\\reducer\\firstReducer.js",["57","58"],"\r\nimport allCardsInTheGame from './cardsFactory';\r\nimport {arrayForResults,arrayForMultiFactors} from './cardsFactory';\r\n\r\n\r\n// console.log(allCardsInTheGame)\r\n\r\nconst initialState = {\r\n    allCards: allCardsInTheGame,\r\n    choosedCardsId: [],\r\n    choosedCardsValue: [],\r\n    allSameCards: [],\r\n    gameFinished: false\r\n};\r\n\r\n\r\nconst firstReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'choosedCardsId':\r\n            // console.log(state.choosedCardsId)\r\n\r\n            return {\r\n                ...state,\r\n                choosedCardsId: [...state.choosedCardsId, action.id],\r\n                choosedCardsValue: [...state.choosedCardsValue, action.value],\r\n            }\r\n\r\n        case 'differentCards':\r\n            return {\r\n                ...state,\r\n                choosedCardsId: [],\r\n                choosedCardsValue: [],\r\n            };\r\n\r\n        case 'sameCards':\r\n\r\n            // if (state.allSameCards.indexOf(action.data) === -1) {\r\n            //     console.log(state.allSameCards)\r\n\r\n            return {\r\n                ...state,\r\n                choosedCardsId: [],\r\n                choosedCardsValue: [],\r\n                allSameCards: [...state.allSameCards, action.firstCardId, action.secondCardId]\r\n            }\r\n\r\n        // }\r\n\r\n        // else { return state }\r\n\r\n        case 'gameFinished':\r\n\r\n            return {\r\n                ...state,\r\n                allSameCards: [],\r\n                gameFinished: action.data\r\n            }\r\n\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default firstReducer;\r\n\r\n\r\n","C:\\Users\\Dell\\Desktop\\programering\\projeckt\\React\\med läraren\\Från Christoffer\\Redux\\memorygame-min\\src\\components\\GameFinished.js",[],"C:\\Users\\Dell\\Desktop\\programering\\projeckt\\React\\med läraren\\Från Christoffer\\Redux\\memorygame-min\\src\\reducer\\cardsFactory.js",["59","60"],"\r\n\r\n\r\n\r\nlet reverseOperatorFun = (operator)=> {\r\n    \r\n    if ( operator ==='+') return '-'\r\n    if ( operator ==='-') return '+'\r\n    if ( operator ==='*') return '/'\r\n    if ( operator ==='/') return '*'\r\n    // else return 0\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nlet operator = '*';\r\n\r\nlet reverseOperator = reverseOperatorFun(operator)\r\n\r\nconsole.log(reverseOperator)\r\n\r\n\r\n\r\n\r\n\r\n/* العدد الذي سيتم الضرب به كمثال جدول الخمسة */\r\nlet multiplicationFactor = 5;  \r\n /* عدد البطاقات الفريدة ، نضربه ب 2 لنحصل على عدد  جميع الاوراق */\r\nlet numberOfSimilarPairs = 10  \r\n\r\n/* الفانكشن التي تقوم بالترتيب تلقائي لاي مصفوفة */\r\nlet shuffle = (array) => array.sort(() => Math.random() - 0.5);\r\n\r\n// ---------------------------------------------------------------\r\nlet bildArrayForResults = (numberOfCards) => {\r\n\r\n    let arrayForResults = [];\r\n    while (arrayForResults.length < numberOfCards) {\r\n        let randomNum = Math.ceil(Math.random() * 10);\r\n        // console.log('randomNum', randomNum)\r\n        // let product = multiplicationFactor * randomNum\r\n        let product = eval(`${multiplicationFactor}${operator} ${randomNum}`)\r\n\r\n        if (arrayForResults.indexOf(product) === -1 && randomNum !== 0) {\r\n            // console.log('the number ', randomNum)\r\n            // console.log('the number * multiplicationFactor', product)\r\n            arrayForResults.push(product)\r\n        }\r\n\r\n    }\r\n\r\n    return arrayForResults\r\n\r\n}\r\n\r\n\r\nlet arrayForResults = bildArrayForResults(numberOfSimilarPairs)\r\nconsole.log('arrayForResults', arrayForResults)\r\n\r\n\r\nlet bildArrayForFormulas = () => {\r\n    // console.log(arrayForResults)\r\n    let arrayForFormulas = [];\r\n    for (let i = 0; i < arrayForResults.length; i++) {\r\n        // console.log(arrayForResults[i])\r\n        arrayForFormulas.push(` ${ eval( `${arrayForResults[i]} ${reverseOperator} ${multiplicationFactor}`)}${operator}${multiplicationFactor}`)\r\n    }\r\n    return arrayForFormulas\r\n}\r\n\r\n\r\nlet arrayForFormulas = bildArrayForFormulas()\r\nshuffle(arrayForFormulas )\r\nconsole.log('arrayForFormulas  ', arrayForFormulas)\r\n\r\nlet allCardsInTheGame = arrayForResults.concat(arrayForFormulas);\r\n\r\n\r\n\r\nconsole.log(allCardsInTheGame)\r\n\r\n// arrayForResults\r\n\r\n// let allCardsInTheGame = [1, 2, 3, 4, 5, 6]\r\n\r\nexport default allCardsInTheGame\r\n\r\n// export { arrayForResults, arrayForFormulas }\r\n\r\n\r\n\r\n\r\n\r\n/*  */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// المشكلة التي علينا علاجها هي ان اللعبة تقوم ببناء نفس الارقام دائماً وتعيد ترتيبها بشكل عشوائي\r\n// علينا ضرب الرقم راندوم بعشرة في فانكشن تشكيل ناتج الضرب حيث سنحصل على عامل ضرب الرقم عشرة \r\n\r\n// لكن علينا القيام بالجزء الثاني  الذي يشكل ارقام عوامل الضرب بالطريقة الثانية عن طريق فور لوب للمجموعة الاولى بحيث نضمن اننا سنحص ل على نفس الارقام الاولى\r\n\r\n\r\n\r\n// ---------------------------------------------------------------\r\n// الحل الثالث \r\n/* هذه تقوم باعداد بانشاء مصفوفة مؤلفة من عوامل ضرب عدد معين حتى الرقم المختار للكروت */\r\n// لم تنفع لاننا نحتاح نفس قيم الكروت المنشأة لمصفوفة ناتج الضرب او العملية الحسابية ولا يمكن الحصول على قيم راندوم هنا \r\n// let bildarrayForFormulas  = (numberOfCards) => {\r\n//     let arrayForFormulas  = [];\r\n//     while (arrayForFormulas .length < numberOfCards) {\r\n//         let randomNum = Math.ceil(Math.random() * numberOfCards);\r\n//         let multiFactors = `${randomNum}*${multiplicationFactor}`\r\n//         if (arrayForFormulas .indexOf(multiFactors) === -1 && randomNum !== 0) {\r\n//             arrayForFormulas .push(multiFactors)\r\n//         }\r\n//     } return arrayForFormulas \r\n// }\r\n\r\n\r\n// let arrayForFormulas  = bildarrayForFormulas (numberOfSimilarPairs)\r\n// console.log('arrayForFormulas  ',arrayForFormulas )\r\n// ---------------------------------------------------------------\r\n\r\n\r\n/* الحل الثاني\r\nمشكلته ارقام عوامل الضرب غير مفرطعة\r\n\r\nlet multiplicationFactor = 2;\r\nlet numberOfSimilarPairs = 3\r\n\r\n\r\n\r\nlet bildarrayForResults = (numberOfCards) => {\r\n\r\n    let arrayForResults = [];\r\n    while (arrayForResults.length < numberOfCards) {\r\n        let randomNum = Math.ceil(Math.random() * numberOfCards);\r\n        let product = multiplicationFactor * randomNum\r\n        if (arrayForResults.indexOf(product) === -1 && randomNum !== 0) {\r\n            console.log('the number ', randomNum)\r\n            console.log('the number * multiplicationFactor', product)\r\n            arrayForResults.push(product)\r\n        }\r\n\r\n    }\r\n\r\n    return arrayForResults\r\n\r\n}\r\n\r\n\r\nlet arrayForResults= bildarrayForResults(numberOfSimilarPairs)\r\nconsole.log( arrayForResults)\r\n\r\n\r\nlet bildarrayForFormulas  = () => {\r\n\r\n    let arrayForFormulas  = [];\r\n    for (let i = 0; i < arrayForResults.length; i++) {\r\n        console.log(arrayForResults[i])\r\n        arrayForFormulas .push(`${arrayForResults[i]/2}*${multiplicationFactor}`)\r\n    }\r\n    return arrayForFormulas\r\n}\r\n\r\n\r\nlet arrayForFormulas  = bildarrayForFormulas ()\r\nconsole.log( arrayForFormulas )\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* الحل الاول للارقام فقط  */\r\n// let bildRandomArray = (numberOfCards) => {\r\n//     let allUniqueCards = [];\r\n//     while (allUniqueCards.length < numberOfCards) {\r\n//         let randomNum = Math.floor(Math.random() * numberOfCards + 1);\r\n//         if (allUniqueCards.indexOf(randomNum) === -1 && randomNum !== 0) {\r\n//             allUniqueCards.push(randomNum)\r\n//         }\r\n//     }\r\n//     return allUniqueCards;\r\n// }\r\n\r\n// let numberOfSimilarPairs = 3\r\n\r\n// let allCardsInTheGame = bildRandomArray(numberOfSimilarPairs).concat(bildRandomArray(numberOfSimilarPairs));\r\n\r\n\r\n// export default allCardsInTheGame","C:\\Users\\Dell\\Desktop\\programering\\projeckt\\React\\med läraren\\Från Christoffer\\Redux\\memorygame-min\\src\\components\\FormulasCards.js",["61"],"import { useSelector } from 'react-redux'\r\nimport { useDispatch } from 'react-redux'\r\nimport { choosedCard } from '../actions/action'\r\nimport React from 'react'\r\n\r\n\r\nfunction FormulasCards(props) {\r\n    const dispatch = useDispatch()\r\n    const stateFirstReducer = useSelector(state => {\r\n        return state.firstReducer;\r\n    })\r\n\r\n    // useEffect(() => {\r\n    //     const interval = setInterval(() => {\r\n    //         let x = new Date().toLocaleTimeString()\r\n    //         // console.log(x)\r\n    //     }, 1000);\r\n    //     return () => clearInterval(interval);\r\n    // }, []);\r\n\r\n\r\n\r\n\r\n    function handleClick() {\r\n        let allSpan = document.querySelectorAll('span')\r\n        console.log(props.formulaOrResult)\r\n        props.setFormulaOrResult(props.cartText)\r\n\r\n        if (props.formulaOrResult !== props.cartText) {\r\n            if (stateFirstReducer.choosedCardsId.indexOf(props.id) === -1) {\r\n                if (stateFirstReducer.choosedCardsId.length < 2) {\r\n                    // console.log(typeof props.theCard)\r\n                    // console.log(eval(props.theCard))\r\n                    dispatch(choosedCard(props.id, eval(props.theCard)))\r\n                    allSpan[props.id * 2].className = 'front';\r\n                    allSpan[(props.id * 2) + 1].className = 'back flip';\r\n                }\r\n            }\r\n        } else alert ('choose card from the other side')\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className={props.className}>\r\n            <article className=\"memory-card\" id={props.id} onClick={handleClick}>\r\n                <span className='front flip'> {props.theCard}</span>\r\n                <span className='back' >{props.cartText}</span>\r\n            </article>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormulasCards;\r\n","C:\\Users\\Dell\\Desktop\\programering\\projeckt\\React\\med läraren\\Från Christoffer\\Redux\\memorygame-min\\src\\components\\ResultsCards.js",["62"],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":21,"column":3,"nodeType":"69","endLine":21,"endColumn":12,"suggestions":"70"},{"ruleId":"71","severity":1,"message":"72","line":39,"column":53,"nodeType":"73","messageId":"74","endLine":39,"endColumn":55},{"ruleId":"75","severity":1,"message":"76","line":62,"column":56,"nodeType":"77","messageId":"78","endLine":62,"endColumn":58},{"ruleId":"75","severity":1,"message":"76","line":73,"column":56,"nodeType":"77","messageId":"78","endLine":73,"endColumn":58},{"ruleId":"79","severity":1,"message":"80","line":3,"column":9,"nodeType":"69","messageId":"81","endLine":3,"endColumn":24},{"ruleId":"79","severity":1,"message":"82","line":3,"column":25,"nodeType":"69","messageId":"81","endLine":3,"endColumn":45},{"ruleId":"83","severity":1,"message":"84","line":45,"column":23,"nodeType":"85","messageId":"74","endLine":45,"endColumn":27},{"ruleId":"83","severity":1,"message":"84","line":69,"column":36,"nodeType":"85","messageId":"74","endLine":69,"endColumn":40},{"ruleId":"83","severity":1,"message":"84","line":34,"column":52,"nodeType":"85","messageId":"74","endLine":34,"endColumn":56},{"ruleId":"83","severity":1,"message":"84","line":34,"column":52,"nodeType":"85","messageId":"74","endLine":34,"endColumn":56},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setFormulaOrResult'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [stateFirstReducer.choosedCardsId, stateFirstReducer.choosedCardsValue, dispatch] as a second argument to the useEffect Hook.","Identifier",["88"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-unused-vars","'arrayForResults' is defined but never used.","unusedVar","'arrayForMultiFactors' is defined but never used.","no-eval","eval can be harmful.","CallExpression","no-global-assign","no-unsafe-negation",{"desc":"89","fix":"90"},"Add dependencies array: [stateFirstReducer.choosedCardsId, stateFirstReducer.choosedCardsValue, dispatch]",{"range":"91","text":"92"},[2008,2008],", [stateFirstReducer.choosedCardsId, stateFirstReducer.choosedCardsValue, dispatch]"]